<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tex0 = sprite_get_texture(spr_corn, 0);

width = 13 * 1.5;
height = 51 * 1.5;
segments = 2;
density = 6;
density_ratio = 32.0 / density;
//image_index = 4;
//sprite_index = 4;
image_speed = 0.0;

vertex_format_begin();
vertex_format_add_position_3d();
vertex_format_add_textcoord();
vertex_format_add_colour();
vertex_format_add_custom(vertex_type_float1, vertex_usage_textcoord);
format = vertex_format_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d3d_start();
d3d_set_zwriteenable(true);
draw_set_alpha_test(true);
shader_set(sh_wind);

var tex = tex0;

// Set appropriate uniforms
with(obj_wind_controller){
    //shader_set_uniform_f(u_delta, 128.0); // Implement later
    //shader_set_uniform_f(u_wavelength, 128.0);
    shader_set_uniform_f(u_amplitude, 3.0);
}

with(obj_camera){
    var w_x = view_xview - 48;
    var n_y = view_yview - 32;
    var e_x = view_xview + view_wview + 48;
    var s_y = view_yview + view_hview + 96;
with(obj_corn_vertex){
    if(w_x &lt; x &amp;&amp; e_x &gt; x &amp;&amp; n_y &lt; y &amp;&amp; s_y &gt; y){
        vertex_submit(vBuff, pr_trianglelist, tex);
    }
}
}
shader_reset();
draw_set_alpha_test(false);
d3d_set_zwriteenable(false);
d3d_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
